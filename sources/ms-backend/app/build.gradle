/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.4.3'
    id 'org.flywaydb.flyway' version '11.4.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web:3.4.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.4.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.3'

    // Needed to create friendly names.
    implementation 'com.github.slugify:slugify:3.0.7'
    implementation 'org.flywaydb:flyway-core:11.5.0'

    // IN ORDER TO THE ANNOTATIONS TO WORK, THE LOMBOK AND MAPSTRUCT MUST BE PLACED IN ORDER.
    // First lombok and them MapStruct. Spent a lot of time troubleshooting.
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	testCompileOnly 'org.projectlombok:lombok:1.18.36'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    testImplementation 'junit:junit:4.13.1'

    // Database engine for testing jpa
    implementation 'com.h2database:h2:2.3.232'
    testImplementation 'com.h2database:h2:2.3.232'

    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

flyway {
    url = 'jdbc:h2:file:./database'
    user = 'sa'
    password = 'password'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.microshop.App'
}

// compileJava {
//     options.compilerArgs += [
//         '-Amapstruct.suppressGeneratorTimestamp=true',
//         '-Amapstruct.suppressGeneratorVersionInfoComment=true',
//         '-Amapstruct.verbose=true'
//     ]
// }

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
